name: Versioning Workflows

on:
  push:
    branches:
      - main
      - pre-patch
      - pre-minor
      - minor

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Configure Git
      run: |
        git config --global user.email "bedoyasergio3@gmail.com"
        git config --global user.name "SergioABH"

    - name: Install Dependencies
      run: npm install

    - name: Determine Version
      run: |
        branch_name=$(echo "$GITHUB_REF" | sed -e 's,.*/\(.*\),\1,')
        commit_message=$(git log --format=%B -n 1 HEAD)

        if [[ "$branch_name" == "main" ]]; then
          version_type="default"
        elif [[ "$branch_name" == "pre-patch" || "$branch_name" == "pre-minor" ]]; then
          version_type="prerelease"
        elif [[ "$branch_name" == "minor" ]]; then
          version_type="minor"
        fi

        # Obtener la versión actual y calcular la nueva versión
        current_version=$(node -p "require('./package.json').version")
        IFS='.-' read -ra version_parts <<< "$current_version"
        major="${version_parts[0]}"
        minor="${version_parts[1]}"
        patch="${version_parts[2]}"
        prerelease="${version_parts[3]}"

        if [[ "$version_type" == "prerelease" ]]; then
          prerelease="rc.0"
        fi

        new_version="$major.$minor.$patch-$prerelease"
        echo "{\"version\":\"$new_version\"}" > package.json

    - name: Commit and push changes
      run: |
        if [[ $(git status --porcelain) ]]; then
          git add package.json
          git commit -m "Bump version to $new_version"
          git push
        else
          echo "No changes to commit."
        fi

    - name: Push tags
      run: git push --tags
